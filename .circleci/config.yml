# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
#      - run:
#          name: Test
#          command: mvn test
      # - run:
      #     name: deploy
      #     command: scp -i "/home/circleci/aws-demo.pem" /home/circleci/project/target/zaiko-kanrisha-0.0.1-SNAPSHOT ubuntu@ec2-52-13-55-116.us-west-2.compute.amazonaws.com:/home/ubuntu

  example-job:
    docker:
      # replace with your preferred image
      - image: cimg/base:stable
    steps:
      - aws-cli/setup:
          aws-access-key-id: AKIA6BATJATTSHOP4OYR 
          aws-region: us-west-2 
          aws-secret-access-key: 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
      - run:
          name: deploy
          command:  /home/circleci/project/target/zaiko-kanrisha-0.0.1-SNAPSHOT ubuntu@ec2-18-237-0-28.us-west-2.compute.amazonaws.com:/home/ubuntu
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
